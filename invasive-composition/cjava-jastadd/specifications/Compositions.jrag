/**
 * This program and the accompanying materials are made available under the
 * terms of the MIT license (X11 license) which accompanies this distribution.
 *
 * @author M. Tasić, C. Bürger
 */

aspect Compositions {
	syn boolean BindComposer.isExhausted() = Target() == null;
	
	syn BindComposer CompilationUnit.nextComposition() = getCompositionProgram().nextComposition();
	syn BindComposer CompositionProgram.nextComposition() {
		for (int i = 0; i < getNumComposers(); i++) {
			BindComposer next = getComposers(i);
			if (!next.isExhausted())
				return next;
		}
		return null;
	}
}
