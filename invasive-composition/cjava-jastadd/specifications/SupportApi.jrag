/**
 * This program and the accompanying materials are made available under the
 * terms of the MIT license (X11 license) which accompanies this distribution.
 *
 * @author M. Tasić, C. Bürger
 */

aspect SupportApi {
	// Broadcast compilation unit:
	inh CompilationUnit BindComposer.CompilationUnit();
	eq CompilationUnit.getCompositionProgram().CompilationUnit() = this;
	
	syn String BindComposer.sourceName() = prepareName(getSourceName());
	syn String BindComposer.targetName() = prepareName(getTargetName());
	
	private String BindComposer.prepareName(String name) {
		String[] parts = name.split("\\.");
		StringBuffer newname = new StringBuffer();
		for (int i = 0; i < parts.length; i++) {
			if (parts[i].equals("**"))
				newname.append("-1");
			else if (parts[i].matches("\\*[0-9]+"))
				newname.append(parts[i].substring(1));
			else newname.append(parts[i]);
			if (i != parts.length - 1)
				newname.append(".");
		}
		return newname.toString();
	} 
}
